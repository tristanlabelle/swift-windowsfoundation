// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import struct Foundation.UUID

public struct WindowsFoundationCollections_CollectionChange: RawRepresentable, Hashable, Codable {
    public var rawValue: Int32

    public init(rawValue: Int32 = 0) {
        self.rawValue = rawValue
    }

    public static let reset: Self = Self(rawValue: 0)
    public static let itemInserted: Self = Self(rawValue: 1)
    public static let itemRemoved: Self = Self(rawValue: 2)
    public static let itemChanged: Self = Self(rawValue: 3)
}

public protocol WindowsFoundationCollections_IIterableProtocol<T>: IInspectableProtocol {
    associatedtype T

    func first() throws -> WindowsFoundationCollections_IIterator<T>?
}

public typealias WindowsFoundationCollections_IIterable<T> = any WindowsFoundationCollections_IIterableProtocol<T>

public protocol WindowsFoundationCollections_IIteratorProtocol<T>: IInspectableProtocol {
    associatedtype T

    var current: T { get throws }
    var hasCurrent: Bool { get throws }

    func moveNext() throws -> Bool
    func getMany(_ items: [T]) throws -> UInt32
}

public typealias WindowsFoundationCollections_IIterator<T> = any WindowsFoundationCollections_IIteratorProtocol<T>

public protocol WindowsFoundationCollections_IKeyValuePairProtocol<K, V>: IInspectableProtocol {
    associatedtype K
    associatedtype V

    var key: K { get throws }
    var value: V { get throws }
}

public typealias WindowsFoundationCollections_IKeyValuePair<K, V> = any WindowsFoundationCollections_IKeyValuePairProtocol<K, V>

public protocol WindowsFoundationCollections_IMapChangedEventArgsProtocol<K>: IInspectableProtocol {
    associatedtype K

    var collectionChange: WindowsFoundationCollections_CollectionChange { get throws }
    var key: K { get throws }
}

public typealias WindowsFoundationCollections_IMapChangedEventArgs<K> = any WindowsFoundationCollections_IMapChangedEventArgsProtocol<K>

public protocol WindowsFoundationCollections_IMapViewProtocol<K, V>: IInspectableProtocol {
    associatedtype K
    associatedtype V

    var size: UInt32 { get throws }

    func lookup(_ key: K) throws -> V
    func hasKey(_ key: K) throws -> Bool
    func split(_ first: inout WindowsFoundationCollections_IMapView<K, V>?, _ second: inout WindowsFoundationCollections_IMapView<K, V>?) throws
}

public typealias WindowsFoundationCollections_IMapView<K, V> = any WindowsFoundationCollections_IMapViewProtocol<K, V>

public protocol WindowsFoundationCollections_IMapProtocol<K, V>: IInspectableProtocol {
    associatedtype K
    associatedtype V

    var size: UInt32 { get throws }

    func lookup(_ key: K) throws -> V
    func hasKey(_ key: K) throws -> Bool
    func getView() throws -> WindowsFoundationCollections_IMapView<K, V>?
    func insert(_ key: K, _ value: V) throws -> Bool
    func remove(_ key: K) throws
    func clear() throws
}

public typealias WindowsFoundationCollections_IMap<K, V> = any WindowsFoundationCollections_IMapProtocol<K, V>

public protocol WindowsFoundationCollections_IObservableMapProtocol<K, V>: IInspectableProtocol {
    associatedtype K
    associatedtype V
}

public typealias WindowsFoundationCollections_IObservableMap<K, V> = any WindowsFoundationCollections_IObservableMapProtocol<K, V>

public protocol WindowsFoundationCollections_IObservableVectorProtocol<T>: IInspectableProtocol {
    associatedtype T
}

public typealias WindowsFoundationCollections_IObservableVector<T> = any WindowsFoundationCollections_IObservableVectorProtocol<T>

public protocol WindowsFoundationCollections_IPropertySetProtocol: IInspectableProtocol {
}

public typealias WindowsFoundationCollections_IPropertySet = any WindowsFoundationCollections_IPropertySetProtocol

public protocol WindowsFoundationCollections_IVectorChangedEventArgsProtocol: IInspectableProtocol {
    var collectionChange: WindowsFoundationCollections_CollectionChange { get throws }
    var index: UInt32 { get throws }
}

public typealias WindowsFoundationCollections_IVectorChangedEventArgs = any WindowsFoundationCollections_IVectorChangedEventArgsProtocol

public protocol WindowsFoundationCollections_IVectorViewProtocol<T>: IInspectableProtocol {
    associatedtype T

    var size: UInt32 { get throws }

    func getAt(_ index: UInt32) throws -> T
    func indexOf(_ value: T, _ index: inout UInt32) throws -> Bool
    func getMany(_ startIndex: UInt32, _ items: [T]) throws -> UInt32
}

public typealias WindowsFoundationCollections_IVectorView<T> = any WindowsFoundationCollections_IVectorViewProtocol<T>

public protocol WindowsFoundationCollections_IVectorProtocol<T>: IInspectableProtocol {
    associatedtype T

    var size: UInt32 { get throws }

    func getAt(_ index: UInt32) throws -> T
    func getView() throws -> WindowsFoundationCollections_IVectorView<T>?
    func indexOf(_ value: T, _ index: inout UInt32) throws -> Bool
    func setAt(_ index: UInt32, _ value: T) throws
    func insertAt(_ index: UInt32, _ value: T) throws
    func removeAt(_ index: UInt32) throws
    func append(_ value: T) throws
    func removeAtEnd() throws
    func clear() throws
    func getMany(_ startIndex: UInt32, _ items: [T]) throws -> UInt32
    func replaceAll(_ items: [T]) throws
}

public typealias WindowsFoundationCollections_IVector<T> = any WindowsFoundationCollections_IVectorProtocol<T>
public typealias WindowsFoundationCollections_MapChangedEventHandler<K, V> = (WindowsFoundationCollections_IObservableMap<K, V>?, WindowsFoundationCollections_IMapChangedEventArgs<K>?) throws -> Void
public typealias WindowsFoundationCollections_VectorChangedEventHandler<T> = (WindowsFoundationCollections_IObservableVector<T>?, WindowsFoundationCollections_IVectorChangedEventArgs?) throws -> Void