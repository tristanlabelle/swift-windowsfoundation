// Generated by swift-winrt
// swiftlint:disable all

import CWindowsFoundation
import WindowsRuntime
import struct Foundation.UUID

public enum WindowsFoundation_PropertyValue {
    private static var _ipropertyValueStatics: UnsafeMutablePointer<__x_ABI_CWindows_CFoundation_CIPropertyValueStatics>! = nil

    private static func _getIPropertyValueStatics() throws -> UnsafeMutablePointer<__x_ABI_CWindows_CFoundation_CIPropertyValueStatics> {
        let iid = IID(0x629BDBC8, 0xD932, 0x4FF4, 0x96B9, 0x8D96C5C1E858)
        _ipropertyValueStatics = try _ipropertyValueStatics ?? WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Foundation.PropertyValue", iid: iid)
        return _ipropertyValueStatics
    }

    public static func createEmpty() throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateEmpty(_this, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createUInt8(_ value: Swift.UInt8) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateUInt8(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createInt16(_ value: Swift.Int16) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateInt16(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createUInt16(_ value: Swift.UInt16) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateUInt16(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createInt32(_ value: Swift.Int32) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateInt32(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createUInt32(_ value: Swift.UInt32) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateUInt32(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createInt64(_ value: Swift.Int64) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateInt64(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createUInt64(_ value: Swift.UInt64) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateUInt64(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createSingle(_ value: Swift.Float) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateSingle(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createDouble(_ value: Swift.Double) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateDouble(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createChar16(_ value: COM.WideChar) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        let value = COM.WideChar.toABI(value)
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateChar16(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createBoolean(_ value: Swift.Bool) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        let value = COM.BooleanProjection.toABI(value)
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateBoolean(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createString(_ value: Swift.String) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.HStringProjection.toABI(value)
        defer { WindowsRuntime.HStringProjection.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateString(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createInspectable(_ value: WindowsRuntime.IInspectable?) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.IInspectableProjection.toABI(value)
        defer { WindowsRuntime.IInspectableProjection.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateInspectable(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createGuid(_ value: Foundation.UUID) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        let value = COM.GUIDProjection.toABI(value)
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateGuid(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createDateTime(_ value: WindowsFoundation_DateTime) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        let value = WindowsFoundation_DateTime.toABI(value)
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateDateTime(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createTimeSpan(_ value: WindowsFoundation_TimeSpan) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        let value = WindowsFoundation_TimeSpan.toABI(value)
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateTimeSpan(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createPoint(_ value: WindowsFoundation_Point) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        let value = WindowsFoundation_Point.toABI(value)
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreatePoint(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createSize(_ value: WindowsFoundation_Size) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        let value = WindowsFoundation_Size.toABI(value)
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateSize(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createRect(_ value: WindowsFoundation_Rect) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        let value = WindowsFoundation_Rect.toABI(value)
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateRect(_this, value, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createUInt8Array(_ value: [Swift.UInt8]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.UInt8>>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.UInt8>>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateUInt8Array(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createInt16Array(_ value: [Swift.Int16]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.Int16>>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.Int16>>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateInt16Array(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createUInt16Array(_ value: [Swift.UInt16]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.UInt16>>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.UInt16>>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateUInt16Array(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createInt32Array(_ value: [Swift.Int32]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.Int32>>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.Int32>>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateInt32Array(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createUInt32Array(_ value: [Swift.UInt32]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.UInt32>>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.UInt32>>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateUInt32Array(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createInt64Array(_ value: [Swift.Int64]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.Int64>>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.Int64>>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateInt64Array(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createUInt64Array(_ value: [Swift.UInt64]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.UInt64>>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.UInt64>>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateUInt64Array(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createSingleArray(_ value: [Swift.Float]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.Float>>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.Float>>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateSingleArray(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createDoubleArray(_ value: [Swift.Double]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.Double>>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<NumericProjection<Swift.Double>>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateDoubleArray(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createChar16Array(_ value: [COM.WideChar]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<COM.WideChar>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<COM.WideChar>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateChar16Array(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createBooleanArray(_ value: [Swift.Bool]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<COM.BooleanProjection>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<COM.BooleanProjection>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateBooleanArray(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createStringArray(_ value: [Swift.String]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<WindowsRuntime.HStringProjection>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<WindowsRuntime.HStringProjection>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateStringArray(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createInspectableArray(_ value: [WindowsRuntime.IInspectable?]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<WindowsRuntime.IInspectableProjection>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<WindowsRuntime.IInspectableProjection>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateInspectableArray(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createGuidArray(_ value: [Foundation.UUID]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<COM.GUIDProjection>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<COM.GUIDProjection>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateGuidArray(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createDateTimeArray(_ value: [WindowsFoundation_DateTime]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<WindowsFoundation_DateTime>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<WindowsFoundation_DateTime>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateDateTimeArray(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createTimeSpanArray(_ value: [WindowsFoundation_TimeSpan]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<WindowsFoundation_TimeSpan>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<WindowsFoundation_TimeSpan>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateTimeSpanArray(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createPointArray(_ value: [WindowsFoundation_Point]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<WindowsFoundation_Point>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<WindowsFoundation_Point>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreatePointArray(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createSizeArray(_ value: [WindowsFoundation_Size]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<WindowsFoundation_Size>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<WindowsFoundation_Size>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateSizeArray(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }

    public static func createRectArray(_ value: [WindowsFoundation_Rect]) throws -> WindowsRuntime.IInspectable? {
        let _this = try _getIPropertyValueStatics()
        var value = try WindowsRuntime.WinRTArrayProjection<WindowsFoundation_Rect>.toABI(value)
        defer { WindowsRuntime.WinRTArrayProjection<WindowsFoundation_Rect>.release(&value) }
        var _result: IInspectableProjection.COMPointer? = nil
        try HResult.throwIfFailed(_this.pointee.lpVtbl.pointee.CreateRectArray(_this, value.count, value.elements, &_result))
        return WindowsRuntime.IInspectableProjection.toSwift(consuming: &_result)
    }
}