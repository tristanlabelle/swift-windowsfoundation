// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import struct Foundation.UUID

public struct WindowsFoundationCollections_CollectionChange: RawRepresentable, Hashable, Codable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    public static let reset = Self(rawValue: 0)
    public static let itemInserted = Self(rawValue: 1)
    public static let itemRemoved = Self(rawValue: 2)
    public static let itemChanged = Self(rawValue: 3)
}

public protocol WindowsFoundationCollections_IIterableProtocol<T>: IInspectableProtocol {
    associatedtype T

    func first() throws -> WindowsFoundationCollections_IIterator<T>?
}

public typealias WindowsFoundationCollections_IIterable<T> = any WindowsFoundationCollections_IIterableProtocol<T>

public protocol WindowsFoundationCollections_IIteratorProtocol<T>: IInspectableProtocol {
    associatedtype T

    var current: T { get throws }
    var hasCurrent: Swift.Bool { get throws }

    func moveNext() throws -> Swift.Bool
    func getMany(_ items: [T]) throws -> Swift.UInt32
}

public typealias WindowsFoundationCollections_IIterator<T> = any WindowsFoundationCollections_IIteratorProtocol<T>

public protocol WindowsFoundationCollections_IKeyValuePairProtocol<K, V>: IInspectableProtocol {
    associatedtype K
    associatedtype V

    var key: K { get throws }
    var value: V { get throws }
}

public typealias WindowsFoundationCollections_IKeyValuePair<K, V> = any WindowsFoundationCollections_IKeyValuePairProtocol<K, V>

public protocol WindowsFoundationCollections_IMapChangedEventArgsProtocol<K>: IInspectableProtocol {
    associatedtype K

    var collectionChange: WindowsFoundationCollections_CollectionChange { get throws }
    var key: K { get throws }
}

public typealias WindowsFoundationCollections_IMapChangedEventArgs<K> = any WindowsFoundationCollections_IMapChangedEventArgsProtocol<K>

public protocol WindowsFoundationCollections_IMapViewProtocol<K, V>: WindowsFoundationCollections_IIterableProtocol where T == WindowsFoundationCollections_IKeyValuePair<K, V>? {
    associatedtype K
    associatedtype V

    var size: Swift.UInt32 { get throws }

    func lookup(_ key: K) throws -> V
    func hasKey(_ key: K) throws -> Swift.Bool
    func split(_ first: inout WindowsFoundationCollections_IMapView<K, V>?, _ second: inout WindowsFoundationCollections_IMapView<K, V>?) throws
}

public typealias WindowsFoundationCollections_IMapView<K, V> = any WindowsFoundationCollections_IMapViewProtocol<K, V>

public protocol WindowsFoundationCollections_IMapProtocol<K, V>: WindowsFoundationCollections_IIterableProtocol where T == WindowsFoundationCollections_IKeyValuePair<K, V>? {
    associatedtype K
    associatedtype V

    var size: Swift.UInt32 { get throws }

    func lookup(_ key: K) throws -> V
    func hasKey(_ key: K) throws -> Swift.Bool
    func getView() throws -> WindowsFoundationCollections_IMapView<K, V>?
    func insert(_ key: K, _ value: V) throws -> Swift.Bool
    func remove(_ key: K) throws
    func clear() throws
}

public typealias WindowsFoundationCollections_IMap<K, V> = any WindowsFoundationCollections_IMapProtocol<K, V>

public protocol WindowsFoundationCollections_IObservableMapProtocol<K, V>: WindowsFoundationCollections_IMapProtocol {
    associatedtype K
    associatedtype V
}

public typealias WindowsFoundationCollections_IObservableMap<K, V> = any WindowsFoundationCollections_IObservableMapProtocol<K, V>

public protocol WindowsFoundationCollections_IObservableVectorProtocol<T>: WindowsFoundationCollections_IVectorProtocol {
    associatedtype T
}

public typealias WindowsFoundationCollections_IObservableVector<T> = any WindowsFoundationCollections_IObservableVectorProtocol<T>

public protocol WindowsFoundationCollections_IPropertySetProtocol: WindowsFoundationCollections_IObservableMapProtocol, WindowsFoundationCollections_IMapProtocol, WindowsFoundationCollections_IIterableProtocol where K == Swift.String, V == WindowsRuntime.IInspectable?, T == WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsRuntime.IInspectable?>? {
}

public typealias WindowsFoundationCollections_IPropertySet = any WindowsFoundationCollections_IPropertySetProtocol

public protocol WindowsFoundationCollections_IVectorChangedEventArgsProtocol: IInspectableProtocol {
    var collectionChange: WindowsFoundationCollections_CollectionChange { get throws }
    var index: Swift.UInt32 { get throws }
}

public typealias WindowsFoundationCollections_IVectorChangedEventArgs = any WindowsFoundationCollections_IVectorChangedEventArgsProtocol

public protocol WindowsFoundationCollections_IVectorViewProtocol<T>: WindowsFoundationCollections_IIterableProtocol {
    associatedtype T

    var size: Swift.UInt32 { get throws }

    func getAt(_ index: Swift.UInt32) throws -> T
    func indexOf(_ value: T, _ index: inout Swift.UInt32) throws -> Swift.Bool
    func getMany(_ startIndex: Swift.UInt32, _ items: [T]) throws -> Swift.UInt32
}

public typealias WindowsFoundationCollections_IVectorView<T> = any WindowsFoundationCollections_IVectorViewProtocol<T>

public protocol WindowsFoundationCollections_IVectorProtocol<T>: WindowsFoundationCollections_IIterableProtocol {
    associatedtype T

    var size: Swift.UInt32 { get throws }

    func getAt(_ index: Swift.UInt32) throws -> T
    func getView() throws -> WindowsFoundationCollections_IVectorView<T>?
    func indexOf(_ value: T, _ index: inout Swift.UInt32) throws -> Swift.Bool
    func setAt(_ index: Swift.UInt32, _ value: T) throws
    func insertAt(_ index: Swift.UInt32, _ value: T) throws
    func removeAt(_ index: Swift.UInt32) throws
    func append(_ value: T) throws
    func removeAtEnd() throws
    func clear() throws
    func getMany(_ startIndex: Swift.UInt32, _ items: [T]) throws -> Swift.UInt32
    func replaceAll(_ items: [T]) throws
}

public typealias WindowsFoundationCollections_IVector<T> = any WindowsFoundationCollections_IVectorProtocol<T>
public typealias WindowsFoundationCollections_MapChangedEventHandler<K, V> = (WindowsFoundationCollections_IObservableMap<K, V>?, WindowsFoundationCollections_IMapChangedEventArgs<K>?) throws -> Swift.Void
public typealias WindowsFoundationCollections_VectorChangedEventHandler<T> = (WindowsFoundationCollections_IObservableVector<T>?, WindowsFoundationCollections_IVectorChangedEventArgs?) throws -> Swift.Void